package Templates;

import java.util.List;

public class TableauDeBord {

	private Investor investor;

	
	public TableauDeBord(Investor investor) {
		super();
		this.investor = investor;
	}

	
	/*private void createNewProject(int montantInvesti, int tauxInteret, int nombreDePartRembourseParProjet){
		
		investor.addNewProjectEnCours(new Project(tauxInteret, nombreDePartRembourseParProjet, montantInvesti));

	}*/
	
	/**
	 * calcul de gain pour un projet
	 * @param montantAinvestir
	 * @param tauxDinteretMoyen
	 * @param nombreDeMensualite
	 */
	private void strategyUnMois(int montantAinvestir, int tauxDinteretMoyen, int nombreDeMensualite){
		//montant gagné pour chaque projet investi
		int interetParProjet = (tauxDinteretMoyen*montantAinvestir/100);
		int revenu = ((montantAinvestir+interetParProjet)/nombreDeMensualite);
		
		System.out.println( "-> Capital "+ investor.getCapitalAInvestir());
		if(investor.getCapitalAInvestir()>=20){
			System.out.println( "-> Capital sufisant." );
			montantAinvestir =0;
		}
		investor.setCapitalAInvestir((investor.getCapitalAInvestir()-montantAinvestir) + revenu);
		System.out.println( "-> Revenu = "+revenu );
	}
	
	
	public void strategy(int montantAinvestirParMois, int tauxDinteretMoyen, int nombreDePartRembourseParProjet, int nombreDeMoisInvesti){
	
		for(int i=0; i<nombreDeMoisInvesti; i++){
			System.out.println( "-> Mois = "+(i+1) );
			strategyUnMois(montantAinvestirParMois, tauxDinteretMoyen, nombreDePartRembourseParProjet);
		}

	}

}

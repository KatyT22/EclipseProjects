package Templates;

import java.util.List;

public class TableauDeBord {

	private Investor investor;

	
	public TableauDeBord(Investor investor) {
		super();
		this.investor = investor;
	}

	
	/*private void createNewProject(int montantInvesti, int tauxInteret, int nombreDePartRembourseParProjet){
		
		investor.addNewProjectEnCours(new Project(tauxInteret, nombreDePartRembourseParProjet, montantInvesti));

	}*/
	
	/**
	 * calcul de gain pour un projet
	 * @param montantAinvestir
	 * @param tauxDinteretMoyen
	 * @param nombreDeMensualite
	 */
	private float gainMensualite(Project p){
		//montant gagné pour chaque projet investi

		float montantInvesti=0;
		
		System.out.println( "-> Capital "+ investor.getCapitalAInvestir());
		if(investor.getCapitalAInvestir()>=20){
			System.out.println( "-> Investissement sur un projet : +"+p.getMontantInvesti());
			montantInvesti=p.getMontantInvesti();
		}
		investor.setCapitalAInvestir((investor.getCapitalAInvestir()-montantInvesti) + p.getRevenuParMensualite());
		
		
		return p.getRevenuParMensualite();
		
	}
	
	
	public void gainMensualites(List<Project>projets, int frequenceDInvestissement, int dureeDeSimulationEnMois){
	
		float totalRevenu=0;
		for(int i=0; i<dureeDeSimulationEnMois; i++){
			
			System.out.println( "---> Mois = "+(i+1)+" <---" );
			for(Project p:projets){
				investor.setCapitalAInvestir(investor.getCapitalAInvestir()+p.getRevenuParMensualite());
				totalRevenu = totalRevenu+p.getRevenuParMensualite();
			}
			System.out.println( "-> Revenu = "+totalRevenu);
			
		}
		

	}
	

}
